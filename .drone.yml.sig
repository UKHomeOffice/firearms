eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYnVpbGRfNDoKICAgIGltYWdlOiBub2RlOjQuNC4yCiAgICBjb21tYW5kczoKICAgICAgLSBucG0gLS1sb2dsZXZlbCB3YXJuIGluc3RhbGwgLWcgbnBtQDMKICAgICAgLSBucG0gLS1sb2dsZXZlbCB3YXJuIGluc3RhbGwKICAgICAgLSBucG0gcnVuIHRlc3Q6Y2kKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbcHVzaCwgcHVsbF9yZXF1ZXN0XQoKICBidWlsZF81OgogICAgaW1hZ2U6IG5vZGU6NQogICAgY29tbWFuZHM6CiAgICAgIC0gbnBtIC0tbG9nbGV2ZWwgd2FybiBpbnN0YWxsCiAgICAgIC0gbnBtIHJ1biB0ZXN0OmNpCiAgICB3aGVuOgogICAgICBldmVudDogW3B1c2gsIHB1bGxfcmVxdWVzdF0KCiAgYnVpbGRfYXBwOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IGZpcmVhcm1zIC4KICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdWxsX3JlcXVlc3QKCiAgYnVpbGRfYXBwOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IGZpcmVhcm1zIC4KICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIGJ1aWxkX2FjY2VwdGFuY2U6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgYnVpbGQgLWYgRG9ja2VyZmlsZS1hY2NlcHRhbmNlIC10IGFjY2VwdGFuY2UgLgogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1bGxfcmVxdWVzdAoKICBidWlsZF9hY2NlcHRhbmNlOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC1mIERvY2tlcmZpbGUtYWNjZXB0YW5jZSAtdCBhY2NlcHRhbmNlIC4KICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIHRlc3RfYWNjZXB0YW5jZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBydW4gLWUgTk9ERV9FTlY9Y2kgLWQgLS1uZXQgaG9zdCBmaXJlYXJtcwogICAgICAtIGRvY2tlciBydW4gLS1ybSAtLW5ldCBob3N0IGFjY2VwdGFuY2UKICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdWxsX3JlcXVlc3QKCiAgdGVzdF9hY2NlcHRhbmNlOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIHJ1biAtZSBOT0RFX0VOVj1jaSAtZCAtLW5ldCBob3N0IGZpcmVhcm1zCiAgICAgIC0gZG9ja2VyIHJ1biAtLXJtIC0tbmV0IGhvc3QgYWNjZXB0YW5jZQogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKCiAgaW1hZ2VfdG9fcXVheToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtkcm9uZSIgLXA9JHtET0NLRVJfUEFTU1dPUkR9IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIGZpcmVhcm1zIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9maXJlYXJtczoke0RST05FX0NPTU1JVF9TSEF9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2ZpcmVhcm1zOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIHRyaWdnZXJfZGVwbG95X3RvX2RldjoKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvZHJvbmUtdHJpZ2dlcjpsYXRlc3QKICAgIGRyb25lX3NlcnZlcjogaHR0cHM6Ly9kcm9uZS5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrCiAgICByZXBvOiBVS0hvbWVPZmZpY2Uva3ViZS1maXJlYXJtcwogICAgYnJhbmNoOiBtYXN0ZXIKICAgIGRlcGxveV90bzogZmlyZWFybXMtZGV2CiAgICBwYXJhbXM6IEFQUF9JTUFHRV9UQUc9JHtEUk9ORV9DT01NSVRfU0hBfSxLVUJFX05BTUVTUEFDRT1maXJlYXJtcy1kZXYKICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIHRyaWdnZXJfZGVwbG95X3RvX3ByZXByb2Q6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2Ryb25lLXRyaWdnZXI6bGF0ZXN0CiAgICBkcm9uZV9zZXJ2ZXI6IGh0dHBzOi8vZHJvbmUuZGlnaXRhbC5ob21lb2ZmaWNlLmdvdi51awogICAgcmVwbzogVUtIb21lT2ZmaWNlL2t1YmUtZmlyZWFybXMKICAgIGJyYW5jaDogbWFzdGVyCiAgICBkZXBsb3lfdG86IGZpcmVhcm1zLXByZXByb2QKICAgIHBhcmFtczogQVBQX0lNQUdFX1RBRz0ke0RST05FX0NPTU1JVF9TSEF9LEtVQkVfTkFNRVNQQUNFPWZpcmVhcm1zLXByZXByb2QKICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKCnNlcnZpY2VzOgogIHJlZGlzOgogICAgaW1hZ2U6IHJlZGlzCiAgZGluZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMS1kaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBjb21tYW5kOgogICAgICAtICItcyIKICAgICAgLSAib3ZlcmxheSIK.u2egS88FBaENihFRJYMaM9Rd1tcttuvgsKkp0J_kIXc